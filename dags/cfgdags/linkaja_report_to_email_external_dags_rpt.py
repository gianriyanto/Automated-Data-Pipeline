REPORT_CONFIG="""
[
    {
        "report_name": "report_query_dummy_cepat",
        "pic": [
            "rio_h_pangihutan@linkaja.id",
            "oryza_k_ayu@linkaja.id"
        ],
        "recipient": [
            "katharina_d_krissandra@linkaja.id"
        ],
        "query": "SELECT OPERATOR_ID, OPERATOR_CODE, OWNED_IDENTITY_TYPE, OWNED_IDENTITY_ID, SP_ID, USER_NAME, RULE_PROFILE_ID, STATUS, DEFAULT_TILL_ID, ACTIVE_TIME, STATUS_CHANGE_TIME, CREATE_OPER_ID, CREATE_TIME, IS_ADMIN, MODIFY_OPER_ID, MODIFY_TIME, LANGUAGE_CODE, ACCESS_CHANNEL, LOAD_DATA_TS, PERSON_ID, PUBLIC_NAME FROM T_O_OPERATOR WHERE load_data_ts BETWEEN to_date('{{ ds_nodash }}', 'YYYYMMDD') + INTERVAL '1' DAY AND to_date('{{ next_ds_nodash }}', 'YYYYMMDD') + INTERVAL '1' DAY"
    },
    {
        "report_name": "REPORT_ALFAMART",
        "pic": [
            "rio_h_pangihutan@linkaja.id"
        ],
        "recipient": [
            "katharina_d_krissandra@linkaja.id",
            "oryza_k_ayu@linkaja.id"
        ],
        "query": "SELECT EID, ORDERID, LAST_UPDATE_TIME, DEBIT_PARTY, CREDIT_PARTY, REASON_TYPE, PAID_IN, WITHDRAW, BALANCE, CASE WHEN sequence_id IS NULL THEN '-' ELSE sequence_id END AS sequence_id, CASE WHEN terminal IS NULL THEN '-' ELSE terminal END AS terminal, Linked_Trans_ID, ACCOUNT_NO FROM ( SELECT ACCOUNT_ENTRY_INDEX AS EID, TRANS_INDEX AS ORDERID, TO_CHAR(TRANSACTION_END_TIME, 'YYYYMMDD HH24:MI:SS') LAST_UPDATE_TIME, TRANSLATE(CREDIT_PARTY_MNEMONIC, CHR(10)|| CHR(11)|| CHR(13)|| CHR(44), '    ') CREDIT_PARTY, TRANSLATE(DEBIT_PARTY_MNEMONIC, CHR(10)|| CHR(11)|| CHR(13)|| CHR(44), '    ') DEBIT_PARTY, TO_CHAR(PAID_IN_AMOUNT) PAID_IN, TO_CHAR(WITHDRAW_AMOUNT) WITHDRAW, TO_CHAR(RUNNING_BALANCE) BALANCE, REASON_NAME REASON_TYPE, sequence_id, terminal, Linked_Trans_ID, ACCOUNT_NO FROM ( SELECT A.ACCOUNT_ENTRY_INDEX, A.TRANS_INDEX, A.TRANSACTION_END_TIME, D.CREDIT_PARTY_MNEMONIC, D.DEBIT_PARTY_MNEMONIC, C.REASON_NAME, A.AVAILABLE_BALANCE / 100 AVAILABLE_BALANCE, A.WITHDRAW_AMOUNT / 100 WITHDRAW_AMOUNT, A.RUNNING_BALANCE / 100 RUNNING_BALANCE, A.PAID_IN_AMOUNT / 100 PAID_IN_AMOUNT, B.REFERENCE_KEY, B.REFERENCE_VALUE, A.DETAILS, A.ACCOUNT_NO, E.LINKEDORDERID Linked_Trans_ID FROM T_O_ACCOUNT_ENTRY A INNER JOIN T_O_TRANS_RECORD D ON A.TRANS_INDEX = D.ORDERID INNER JOIN T_O_REASON_TYPE C ON A.REASON_TYPE_ID = C.REASON_INDEX LEFT OUTER JOIN T_O_ORDER_REFDATA B ON A.TRANS_INDEX = B.ORDERID LEFT OUTER JOIN ODSTXN.CPS_ORDER_LINKED_INDEX E ON A.TRANS_INDEX = E.ORDERID WHERE A.TRANSACTION_END_TIME >= TO_DATE('{{ ds_nodash }}', 'YYYYMMDD') + INTERVAL '1' DAY AND A.TRANSACTION_END_TIME<TO_DATE('{{ next_ds_nodash }}', 'YYYYMMDD') + INTERVAL '1' DAY AND A.ACCOUNT_NO = '500000000112941470' AND A.ENTRY_REVERSE_FLAG = '0' AND C.STATUS = 30 ) PIVOT ( MAX(REFERENCE_VALUE) FOR REFERENCE_KEY IN ( 'sequence_id' sequence_id, 'terminal' terminal) ) ORDER BY LAST_UPDATE_TIME ASC, EID ASC)"
    },
    {
        "report_name": "REPORT_DANDAN",
        "pic": [
            "rio_h_pangihutan@linkaja.id"
        ],
        "recipient": [
            "katharina_d_krissandra@linkaja.id",
            "oryza_k_ayu@linkaja.id"
        ],
        "query": "SELECT EID, ORDERID, LAST_UPDATE_TIME, DEBIT_PARTY, CREDIT_PARTY, REASON_TYPE, PAID_IN, WITHDRAW, BALANCE, CASE WHEN sequence_id IS NULL THEN '-' ELSE sequence_id END AS sequence_id, CASE WHEN terminal IS NULL THEN '-' ELSE terminal END AS terminal, Linked_Trans_ID, ACCOUNT_NO FROM ( SELECT ACCOUNT_ENTRY_INDEX AS EID, TRANS_INDEX AS ORDERID, TO_CHAR(TRANSACTION_END_TIME, 'YYYYMMDD HH24:MI:SS') LAST_UPDATE_TIME, TRANSLATE(CREDIT_PARTY_MNEMONIC, chr(10)|| chr(11)|| chr(13)|| chr(44), '    ') CREDIT_PARTY, TRANSLATE(DEBIT_PARTY_MNEMONIC, chr(10)|| chr(11)|| chr(13)|| chr(44), '    ') DEBIT_PARTY, TO_CHAR(PAID_IN_AMOUNT) PAID_IN, TO_CHAR(WITHDRAW_AMOUNT) WITHDRAW, TO_CHAR(RUNNING_BALANCE) BALANCE, REASON_NAME REASON_TYPE, sequence_id, terminal, Linked_Trans_ID, ACCOUNT_NO FROM ( SELECT A.ACCOUNT_ENTRY_INDEX, A.TRANS_INDEX, A.TRANSACTION_END_TIME, D.CREDIT_PARTY_MNEMONIC, D.DEBIT_PARTY_MNEMONIC, C.REASON_NAME, A.AVAILABLE_BALANCE / 100 AVAILABLE_BALANCE, A.WITHDRAW_AMOUNT / 100 WITHDRAW_AMOUNT, A.RUNNING_BALANCE / 100 RUNNING_BALANCE, A.PAID_IN_AMOUNT / 100 PAID_IN_AMOUNT, B.REFERENCE_KEY, B.REFERENCE_VALUE, A.DETAILS, A.ACCOUNT_NO, E.LINKEDORDERID Linked_Trans_ID FROM T_O_ACCOUNT_ENTRY A INNER JOIN T_O_TRANS_RECORD D ON A.TRANS_INDEX = D.ORDERID INNER JOIN T_O_REASON_TYPE C ON A.REASON_TYPE_ID = C.REASON_INDEX LEFT OUTER JOIN T_O_ORDER_REFDATA B ON A.TRANS_INDEX = B.ORDERID LEFT OUTER JOIN ODSTXN.CPS_ORDER_LINKED_INDEX E ON A.TRANS_INDEX = E.ORDERID WHERE A.TRANSACTION_END_TIME >= TO_DATE('{{ ds_nodash }}', 'YYYYMMDD') + INTERVAL '1' DAY AND A.TRANSACTION_END_TIME<TO_DATE('{{ next_ds_nodash }}', 'YYYYMMDD') + INTERVAL '1' DAY AND A.ACCOUNT_NO = '500000000112931414' AND A.ENTRY_REVERSE_FLAG = '0' AND C.STATUS = 30 ) PIVOT ( MAX(REFERENCE_VALUE) FOR REFERENCE_KEY IN ( 'sequence_id' sequence_id, 'terminal' terminal) ) ORDER BY LAST_UPDATE_TIME ASC, EID ASC)"
    },
        {
        "report_name": "REPORT_ARTAJASA",
        "pic": [
            "rio_h_pangihutan@linkaja.id"
        ],
        "recipient": [
            "katharina_d_krissandra@linkaja.id",
            "oryza_k_ayu@linkaja.id"
        ],
        "query": "SELECT EID, ORDERID, LAST_UPDATE_TIME, DEBIT_PARTY, CREDIT_PARTY, REASON_TYPE, PAID_IN_AMOUNT, WITHDRAW_AMOUNT, RUNNING_BALANCE, CASE WHEN rrn IS NULL THEN '-' ELSE rrn END AS rrn, CASE WHEN BillReferenceNumber IS NULL THEN '-' ELSE BillReferenceNumber END AS BillReferenceNumber, CASE WHEN approvalCode IS NULL THEN '-' ELSE approvalCode END AS approvalCode, CASE WHEN issuerID IS NULL THEN '-' ELSE issuerID END AS issuerID, CASE WHEN acquirerID IS NULL THEN '-' ELSE acquirerID END AS acquirerID FROM ( SELECT ACCOUNT_ENTRY_INDEX AS EID, TRANS_INDEX AS ORDERID, TO_CHAR(TRANSACTION_END_TIME, 'YYYYMMDD HH24:MI:SS') LAST_UPDATE_TIME, TRANSLATE(CREDIT_PARTY_MNEMONIC, chr(10)|| chr(11)|| chr(13)|| chr(44), '    ') CREDIT_PARTY, TRANSLATE(DEBIT_PARTY_MNEMONIC, chr(10)|| chr(11)|| chr(13)|| chr(44), '    ') DEBIT_PARTY, REASON_NAME REASON_TYPE, TO_CHAR(PAID_IN_AMOUNT) PAID_IN_AMOUNT, TO_CHAR(WITHDRAW_AMOUNT) WITHDRAW_AMOUNT, TO_CHAR(RUNNING_BALANCE) RUNNING_BALANCE, rrn, BillReferenceNumber, approvalCode, issuerID, acquirerID FROM ( SELECT A.ACCOUNT_ENTRY_INDEX, A.TRANS_INDEX, A.TRANSACTION_END_TIME, D.CREDIT_PARTY_MNEMONIC, D.DEBIT_PARTY_MNEMONIC, C.REASON_NAME, A.AVAILABLE_BALANCE / 100 AVAILABLE_BALANCE, A.WITHDRAW_AMOUNT / 100 WITHDRAW_AMOUNT, A.RUNNING_BALANCE / 100 RUNNING_BALANCE, A.PAID_IN_AMOUNT / 100 PAID_IN_AMOUNT, B.REFERENCE_KEY, B.REFERENCE_VALUE FROM T_O_ACCOUNT_ENTRY A INNER JOIN T_O_TRANS_RECORD D ON A.TRANS_INDEX = D.ORDERID INNER JOIN T_O_REASON_TYPE C ON A.REASON_TYPE_ID = C.REASON_INDEX LEFT OUTER JOIN T_O_ORDER_REFDATA B ON A.TRANS_INDEX = B.ORDERID WHERE A.TRANSACTION_END_TIME BETWEEN TO_DATE('{{ prev_ds_nodash }}', 'YYYYMMDD') + INTERVAL '1' DAY AND TO_DATE('{{ ds_nodash }}', 'YYYYMMDD') + INTERVAL '1' DAY AND D.TRANS_INITATE_TIME BETWEEN TO_DATE('{{ prev_ds_nodash }}', 'YYYYMMDD')-7 + INTERVAL '1' DAY AND TO_DATE('{{ ds_nodash }}', 'YYYYMMDD') + INTERVAL '1' DAY AND B.TRANS_INITATE_TIME BETWEEN TO_DATE('{{ prev_ds_nodash }}', 'YYYYMMDD')-7 + INTERVAL '1' DAY AND TO_DATE('{{ ds_nodash }}', 'YYYYMMDD') + INTERVAL '1' DAY AND A.ACCOUNT_NO = '500000000113204191' AND A.ENTRY_REVERSE_FLAG = '0' AND A.FUNDS_TYPE = 1 AND C.STATUS = 30 ) PIVOT ( MAX(REFERENCE_VALUE) FOR REFERENCE_KEY IN ( 'rrn' rrn, 'BillReferenceNumber' BillReferenceNumber, 'approvalCode' approvalCode, 'issuerID' issuerID, 'acquirerID' acquirerID) ) ORDER BY LAST_UPDATE_TIME ASC, EID ASC)"
    }
]
"""