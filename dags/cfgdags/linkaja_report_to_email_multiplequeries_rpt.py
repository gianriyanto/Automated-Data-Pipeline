REPORT_CONFIG = """   
[
    {
        "report_name": "REPORT_TEKTAYA",
        "pic": [
            "gian_riyanto@linkaja.id"
        ],
        "recipient": [
            "gian_riyanto@linkaja.id",
            "katharina_d_krissandra@linkaja.id",
            "oryza_k_ayu@linkaja.id",
            "ahmad_s_irawan@linkaja.id"   
        ],
        "queries": [
                { 
                "query_name": "report_tektaya",
                "query": "SELECT TRIM(TRANSACTION_DATE) ||'|'||TRIM(TRANSACTION_STATUS) ||'|'||TRIM(TRANSACTION_ID) ||'|'||TRIM(REFERENCE_NUMBER) ||'|'||TRIM(MSISDN) ||'|'||TRIM(NOMINAL) ||'|'||TRIM(BALANCE) FROM (SELECT TRANSACTION_DATE,TRANSACTION_STATUS,TRANSACTION_ID,REFERENCE_NUMBER,MSISDN, SUM(NOMINAL) AS NOMINAL, SUM(BALANCE) AS BALANCE FROM (SELECT TRANS_TIME AS TRANSACTION_DATE, STATUS AS TRANSACTION_STATUS, TO_CHAR(TRX_DATE||SEQUENCE_ID) AS TRANSACTION_ID, ORDERID AS REFERENCE_NUMBER, case when instr(COUNTER_PARTY,'-') = 0 then COUNTER_PARTY else substr(COUNTER_PARTY, 0, instr(COUNTER_PARTY,'-') -2) end AS MSISDN, DETAILS, BALANCE, NOMINAL FROM (SELECT X.*, Y.REFERENCE_KEY, Y.REFERENCE_VALUE FROM (SELECT A.ACCOUNT_ENTRY_INDEX, A.TRANS_INDEX ORDERID, TO_CHAR(B.TRANS_INITATE_TIME,'YYYYMMDD HH24:MI:SS') TRANS_TIME, B.TRANS_STATUS STATUS, C.REASON_NAME AS DETAILS, (CASE WHEN B.DEBIT_PARTY_ID IN (select biz_org_id From t_o_biz_org where top_biz_org='201000000002200165') THEN B.CREDIT_PARTY_MNEMONIC ELSE B.DEBIT_PARTY_MNEMONIC END) COUNTER_PARTY, A.ACCOUNT_NO, A.RUNNING_BALANCE/100 AS BALANCE, B.ACTUAL_AMOUNT/100 AS NOMINAL FROM T_O_ACCOUNT_ENTRY A, T_O_TRANS_RECORD B, T_O_REASON_TYPE C WHERE A.TRANSACTION_END_TIME BETWEEN TO_DATE('{{ ds_nodash}} 00:00:00','YYYYMMDD hh24:mi:ss') AND TO_DATE('{{ ds_nodash }} 23:59:59','YYYYMMDD hh24:mi:ss') AND B.TRANS_INITATE_TIME BETWEEN TO_DATE('{{ ds_nodash }} 00:00:00','YYYYMMDD hh24:mi:ss') AND TO_DATE('{{ ds_nodash }} 23:59:59','YYYYMMDD hh24:mi:ss') AND B.TRANS_STATUS='Completed' AND B.IS_REVERSED='0' AND ((B.DEBIT_PARTY_ID IN (select biz_org_id From t_o_biz_org where top_biz_org='201000000002200165')) OR (B.CREDIT_PARTY_ID IN (select biz_org_id From t_o_biz_org where top_biz_org='201000000002200165'))) AND A.TRANS_INDEX=B.ORDERID AND B.REASON_TYPE=C.REASON_INDEX AND C.STATUS='30' AND A.IDENTITY_TYPE='5000' ORDER BY A.ACCOUNT_ENTRY_INDEX) X, T_O_ORDER_REFDATA Y WHERE Y.TRANS_INITATE_TIME BETWEEN TO_DATE('{{ ds_nodash }} 00:00:00','YYYYMMDD hh24:mi:ss') AND TO_DATE('{{ ds_nodash }} 23:59:59','YYYYMMDD hh24:mi:ss') AND X.ORDERID=Y.ORDERID) PIVOT (MAX(REFERENCE_VALUE) FOR (REFERENCE_KEY) IN ('sequence_id' sequence_id, 'trx_date' trx_date)) ORDER BY ACCOUNT_NO, ACCOUNT_ENTRY_INDEX) XX GROUP BY TRANSACTION_DATE,TRANSACTION_STATUS,TRANSACTION_ID,REFERENCE_NUMBER,MSISDN ORDER BY TRANSACTION_DATE) CC"
                }
        ]           
    },  
    
    {
        "report_name": "REPORT_ALFAMART_AND_REPORT_DANDAN",
        "pic": [
            "gian_riyanto@linkaja.id"
        ],
        "recipient": [
            "gian_riyanto@linkaja.id",
            "katharina_d_krissandra@linkaja.id"
        ],
        "queries": [
                { 
                "query_name": "report_alfamart",
                "query": "SELECT EID, ORDERID, LAST_UPDATE_TIME, DEBIT_PARTY, CREDIT_PARTY, REASON_TYPE, PAID_IN, WITHDRAW, BALANCE, CASE WHEN sequence_id IS NULL THEN '-' ELSE sequence_id END AS sequence_id, CASE WHEN terminal IS NULL THEN '-' ELSE terminal END AS terminal, Linked_Trans_ID, ACCOUNT_NO FROM ( SELECT ACCOUNT_ENTRY_INDEX AS EID, TRANS_INDEX AS ORDERID, TO_CHAR(TRANSACTION_END_TIME, 'YYYYMMDD HH24:MI:SS') LAST_UPDATE_TIME, TRANSLATE(CREDIT_PARTY_MNEMONIC, CHR(10)|| CHR(11)|| CHR(13)|| CHR(44), '    ') CREDIT_PARTY, TRANSLATE(DEBIT_PARTY_MNEMONIC, CHR(10)|| CHR(11)|| CHR(13)|| CHR(44), '    ') DEBIT_PARTY, TO_CHAR(PAID_IN_AMOUNT) PAID_IN, TO_CHAR(WITHDRAW_AMOUNT) WITHDRAW, TO_CHAR(RUNNING_BALANCE) BALANCE, REASON_NAME REASON_TYPE, sequence_id, terminal, Linked_Trans_ID, ACCOUNT_NO FROM ( SELECT A.ACCOUNT_ENTRY_INDEX, A.TRANS_INDEX, A.TRANSACTION_END_TIME, D.CREDIT_PARTY_MNEMONIC, D.DEBIT_PARTY_MNEMONIC, C.REASON_NAME, A.AVAILABLE_BALANCE / 100 AVAILABLE_BALANCE, A.WITHDRAW_AMOUNT / 100 WITHDRAW_AMOUNT, A.RUNNING_BALANCE / 100 RUNNING_BALANCE, A.PAID_IN_AMOUNT / 100 PAID_IN_AMOUNT, B.REFERENCE_KEY, B.REFERENCE_VALUE, A.DETAILS, A.ACCOUNT_NO, E.LINKEDORDERID Linked_Trans_ID FROM T_O_ACCOUNT_ENTRY A INNER JOIN T_O_TRANS_RECORD D ON A.TRANS_INDEX = D.ORDERID INNER JOIN T_O_REASON_TYPE C ON A.REASON_TYPE_ID = C.REASON_INDEX LEFT OUTER JOIN T_O_ORDER_REFDATA B ON A.TRANS_INDEX = B.ORDERID LEFT OUTER JOIN ODSTXN.CPS_ORDER_LINKED_INDEX E ON A.TRANS_INDEX = E.ORDERID WHERE A.TRANSACTION_END_TIME BETWEEN TO_DATE('{{ ds_nodash }} 00:00:00','YYYYMMDD hh24:mi:ss') AND TO_DATE('{{ ds_nodash }} 23:59:59','YYYYMMDD hh24:mi:ss') AND A.TRANSACTION_END_TIME BETWEEN TO_DATE('{{ ds_nodash }} 00:00:00','YYYYMMDD hh24:mi:ss') AND TO_DATE('{{ ds_nodash }} 23:59:59','YYYYMMDD hh24:mi:ss') AND A.ACCOUNT_NO = '500000000112941470' AND A.ENTRY_REVERSE_FLAG = '0' AND C.STATUS = 30 ) PIVOT ( MAX(REFERENCE_VALUE) FOR REFERENCE_KEY IN ( 'sequence_id' sequence_id, 'terminal' terminal) ) ORDER BY LAST_UPDATE_TIME ASC, EID ASC)"
                },
                {
                "query_name": "report_dandan",
                "query": "SELECT EID, ORDERID, LAST_UPDATE_TIME, DEBIT_PARTY, CREDIT_PARTY, REASON_TYPE, PAID_IN, WITHDRAW, BALANCE, CASE WHEN sequence_id IS NULL THEN '-' ELSE sequence_id END AS sequence_id, CASE WHEN terminal IS NULL THEN '-' ELSE terminal END AS terminal, Linked_Trans_ID, ACCOUNT_NO FROM ( SELECT ACCOUNT_ENTRY_INDEX AS EID, TRANS_INDEX AS ORDERID, TO_CHAR(TRANSACTION_END_TIME, 'YYYYMMDD HH24:MI:SS') LAST_UPDATE_TIME, TRANSLATE(CREDIT_PARTY_MNEMONIC, CHR(10)|| CHR(11)|| CHR(13)|| CHR(44), '    ') CREDIT_PARTY, TRANSLATE(DEBIT_PARTY_MNEMONIC, CHR(10)|| CHR(11)|| CHR(13)|| CHR(44), '    ') DEBIT_PARTY, TO_CHAR(PAID_IN_AMOUNT) PAID_IN, TO_CHAR(WITHDRAW_AMOUNT) WITHDRAW, TO_CHAR(RUNNING_BALANCE) BALANCE, REASON_NAME REASON_TYPE, sequence_id, terminal, Linked_Trans_ID, ACCOUNT_NO FROM ( SELECT A.ACCOUNT_ENTRY_INDEX, A.TRANS_INDEX, A.TRANSACTION_END_TIME, D.CREDIT_PARTY_MNEMONIC, D.DEBIT_PARTY_MNEMONIC, C.REASON_NAME, A.AVAILABLE_BALANCE / 100 AVAILABLE_BALANCE, A.WITHDRAW_AMOUNT / 100 WITHDRAW_AMOUNT, A.RUNNING_BALANCE / 100 RUNNING_BALANCE, A.PAID_IN_AMOUNT / 100 PAID_IN_AMOUNT, B.REFERENCE_KEY, B.REFERENCE_VALUE, A.DETAILS, A.ACCOUNT_NO, E.LINKEDORDERID Linked_Trans_ID FROM T_O_ACCOUNT_ENTRY A INNER JOIN T_O_TRANS_RECORD D ON A.TRANS_INDEX = D.ORDERID INNER JOIN T_O_REASON_TYPE C ON A.REASON_TYPE_ID = C.REASON_INDEX LEFT OUTER JOIN T_O_ORDER_REFDATA B ON A.TRANS_INDEX = B.ORDERID LEFT OUTER JOIN ODSTXN.CPS_ORDER_LINKED_INDEX E ON A.TRANS_INDEX = E.ORDERID WHERE A.TRANSACTION_END_TIME BETWEEN TO_DATE('{{ ds_nodash }} 00:00:00','YYYYMMDD hh24:mi:ss') AND TO_DATE('{{ ds_nodash }} 23:59:59','YYYYMMDD hh24:mi:ss') AND A.TRANSACTION_END_TIME BETWEEN TO_DATE('{{ ds_nodash }} 00:00:00','YYYYMMDD hh24:mi:ss') AND TO_DATE('{{ ds_nodash }} 23:59:59','YYYYMMDD hh24:mi:ss') AND A.ACCOUNT_NO = '500000000112931414' AND A.ENTRY_REVERSE_FLAG = '0' AND C.STATUS = 30 ) PIVOT ( MAX(REFERENCE_VALUE) FOR REFERENCE_KEY IN ( 'sequence_id' sequence_id, 'terminal' terminal) ) ORDER BY LAST_UPDATE_TIME ASC, EID ASC)"
                }
        ]           
    }  
] 
"""

